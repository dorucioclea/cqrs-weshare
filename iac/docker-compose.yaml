version: "2"

services:

  ############################################ Service ############################################
  nats:
    image: 'nats:1.3.0'
    entrypoint: "/gnatsd -DV --http_port 8222"
    expose:
      - "4222"
      - "8222"
    labels:
      - "traefik.enable=false"
  redis:
    image: 'redis:5.0.3'
    ports:
      - "6379:6379"
    expose:
      - "6379"
    labels:
      - "traefik.enable=false"
  mysql:
    image: 'mysql:8.0.13'
    ports:
      - "3306:3306"
    expose:
      - "3306"
    environment:
      - "MYSQL_ROOT_PASSWORD=my-secret-pw"
      - "MYSQL_DATABASE=cqrs"
      - "MYSQL_USER=cqrsuser"
      - "MYSQL_PASSWORD=cqrspassword"
    labels:
      - "traefik.enable=false"
  
  ############################################ API Gateway ############################################
  kong-database:
    image: postgres:9.5
    environment:
      - "POSTGRES_USER=kong"
      - "POSTGRES_DB=kong"
    labels:
      - "traefik.enable=false"
  kong-init:
    image: cqrs/kong-init:latest
    links:
      - kong-database
      - loadbalancer
      - tracing
    environment:
      - "KONG_DATABASE=postgres"
      - "KONG_PG_HOST=kong-database"
      - "KONG_PROXY_ACCESS_LOG=/dev/stdout"
      - "KONG_ADMIN_ACCESS_LOG=/dev/stdout"
      - "KONG_PROXY_ERROR_LOG=/dev/stderr"
      - "KONG_ADMIN_ERROR_LOG=/dev/stderr"
      - "KONG_ADMIN_LISTEN=0.0.0.0:8001"
    depends_on:
      - kong-database
    ports:
      - "8000:8000"
      - "8001:8001"
    labels:
      - "traefik.enable=false"
  loadbalancer:
    image: traefik:1.7.6
    ports:
      - "80"        # The HTTP port
      - "8080:8080" # The Web UI (enabled by --api)
      - "8083:8083"
    expose:
      - "80"
      - "8081"
      - "8082"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./traefik.toml:/traefik.toml
    labels:
      - "traefik.enable=false"

  ############################################ Apps ############################################
  write:
    image: 'cqrs/write-ws:latest'
    links:
      - nats
      - mysql
    environment:
      - "NATS_URI=nats://nats:4222"
      - "MYSQL_USER=cqrsuser"
      - "MYSQL_PASSWORD=cqrspassword"
      - "MYSQL_HOST=mysql"
      - "MYSQL_NAME=cqrs"
      - "ZIPKIN_ENDPOINT=http://tracing:14268/api/traces"
    depends_on:
      - nats
      - mysql
    expose:
      - "8080"
    labels:
      - "traefik.frontend.entryPoints=write"
      - "traefik.frontend.rule=Host:loadbalancer"
  read:
    image: 'cqrs/read-ws:latest'
    links:
      - redis
      - tracing
    environment:
      - "NATS_URI=nats://nats:4222"
      - "REDIS_URI=redis:6379"
      - "ZIPKIN_ENDPOINT=http://tracing:14268/api/traces"
    depends_on:
      - nats
    expose:
      - "8080"
    labels:
      - "traefik.frontend.entryPoints=read"
      - "traefik.frontend.rule=Host:loadbalancer"
  convert:
    image: 'cqrs/convert-ws:latest'
    links:
      - redis
      - nats
    environment:
      - "REDIS_URI=redis:6379"
      - "NATS_URI=nats://nats:4222"
    depends_on:
      - nats
    expose:
      - "8080"
    labels:
      - "traefik.enable=false"

  ############################################ Monitoring ############################################
  tracing:
    image: jaegertracing/all-in-one:1.8
    links:
      - redis
      - nats
    environment:
      - "COLLECTOR_ZIPKIN_HTTP_PORT=9411"
    ports:
      - "16686:16686"
    expose:
      - "5775/udp"
      - "6831/udp"
      - "6832/udp"
      - "5778"
      - "14268"
      - "9411"
    labels:
      - "traefik.enable=false"
  prometheus:
    image: prom/prometheus:v2.6.0
    links:
      - read
      - write
      - convert
      - loadbalancer
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    labels:
      - "traefik.enable=false"
